package me.raska.opendvs.core.rest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import me.raska.opendvs.base.model.Vulnerability;
import me.raska.opendvs.base.model.poller.PollerAction;
import me.raska.opendvs.core.service.VulnerabilityService;

@CrossOrigin
@RestController
@RequestMapping("/api/v1/vulnerabilities")
public class VulnerabilityRestController {

    @Autowired
    private VulnerabilityService vulnerabilityService;

    @RequestMapping(method = RequestMethod.GET)
    public Page<Vulnerability> getVulnerability(Pageable pageable) {
        return vulnerabilityService.getVulnerabilities(pageable);
    }

    // use detail endpoint to avoid dots issue
    @RequestMapping(value = "/{id}/detail", method = RequestMethod.GET)
    public Vulnerability getVulnerability(@PathVariable("id") String id) {
        return vulnerabilityService.getVulnerability(id);
    }

    @RequestMapping(value = "/cve/trigger", method = RequestMethod.POST)
    public PollerAction triggetCveVulnerabilityFetching(@RequestParam("modifier") String modifier) {
        return vulnerabilityService.triggerCve(modifier);
    }

}
